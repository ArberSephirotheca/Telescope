fragment HostInfo on users {
    id
    first_name
    last_name

    rcs_id: userAccountsByUserId(where: {type: {_eq: "rpi"}}) {
        account_id
    }
}

# GraphQL query for host selection.
query HostSelection($search: String!, $now: date!) {
    # If search is empty, we default to suggestions -- this should include
    # faculty advisors, current coordinators, and current mentors.
    suggested_users: users(
        # Limit to top 10 suggestions.
        limit: 10,
        where: {
            _or: [
                # Faculty advisors
                {role: {_eq: "faculty_advisor"}, enrollmentsByUserId: {semester: {end_date: {_gte: $now}}}},
                # Current coordinators
                {enrollmentsByUserId: {is_coordinator: {_eq: true}, semester: {end_date: {_gte: $now}}}}
                # Current mentors
                {smallGroupMentorsByUserId: {small_group: {semester: {end_date: {_gte: $now}}}}}
            ],
            enrollmentsByUserId: {semester: {end_date: {_gte: $now}}}
        },
        order_by: [
            {first_name: asc},
            {last_name: asc}
        ]
    ) { ... HostInfo }

    users(
        # 50 users max. This should be more than enough.
        limit: 50,
        order_by: [
            {first_name: asc},
            {last_name: asc},
        ],
        where: {
            _or: [
                {first_name: {_ilike: $search}},
                {last_name: {_ilike: $search}},
                {userAccountsByUserId: {account_id: {_ilike: $search}, type: {_eq: "rpi"}}}
            ],
            # Only enrolled users can host meetings in a given semester.
            enrollmentsByUserId: {semester: {end_date: {_gte: $now}}}
        }
    ) { ... HostInfo }
}
